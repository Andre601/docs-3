"use strict";(self.webpackChunkmodrinth_doc=self.webpackChunkmodrinth_doc||[]).push([[287],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),h=c(n),d=r,m=h["".concat(s,".").concat(d)]||h[d]||p[d]||i;return n?a.createElement(m,o(o({ref:t},u),{},{components:n})):a.createElement(m,o({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},5808:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return u},default:function(){return h}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),o=["components"],l={title:"Search API",id:"api_search"},s=void 0,c={unversionedId:"tutorials/api_search",id:"tutorials/api_search",isDocsHomePage:!1,title:"Search API",description:"Welcome!",source:"@site/docs/tutorials/search.md",sourceDirName:"tutorials",slug:"/tutorials/api_search",permalink:"/docs/tutorials/api_search",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/tutorials/search.md",version:"current",frontMatter:{title:"Search API",id:"api_search"}},u=[{value:"High level view of the search API call",id:"high-level-view-of-the-search-api-call",children:[]},{value:"Details",id:"details",children:[{value:"Query",id:"query",children:[]},{value:"Index",id:"index",children:[]},{value:"Limit",id:"limit",children:[]},{value:"Offset",id:"offset",children:[]},{value:"Filters",id:"filters",children:[]},{value:"Facets",id:"facets",children:[]}]}],p={toc:u};function h(e){var t=e.components,n=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Welcome!"),(0,i.kt)("p",null,"This tutorial will explain how search works, first in a nutshell, then in details."),(0,i.kt)("p",null,"After this tutorial, you should be able to make your own searches using our api!"),(0,i.kt)("h2",{id:"high-level-view-of-the-search-api-call"},"High level view of the search API call"),(0,i.kt)("p",null,"The API search is available at the following route: ",(0,i.kt)("inlineCode",{parentName:"p"},"{API_BASE}/search")," (if you are thinking at what {API_BASE} means, ",(0,i.kt)("a",{parentName:"p",href:"/docs/details/domains"},"look here")),(0,i.kt)("h2",{id:"details"},"Details"),(0,i.kt)("p",null,"For the future examples, let's say I want to search a mod about monkes, that is on Fabric 1.17, and it is a great adventure mod ;)"),(0,i.kt)("h3",{id:"query"},"Query"),(0,i.kt)("p",null,"The query is the text you want to search by.\nIn our example, it is ",(0,i.kt)("inlineCode",{parentName:"p"},"Monke")),(0,i.kt)("h3",{id:"index"},"Index"),(0,i.kt)("p",null,"Index is the way we sort elements out of our search, if we have more than one.\nModrinth supports the following indexes:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"relevance")," => This sorts by the element that our system is the best match for your query, at least based on our query."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"downloads")," => This sorts all matches by the order of downloads.\nIn our example, the mod ",(0,i.kt)("inlineCode",{parentName:"li"},"Monke")," will be ranked lower than ",(0,i.kt)("inlineCode",{parentName:"li"},"Monkes: The lost island")," if the second has more downloads."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"follows")," => The same principle as ",(0,i.kt)("inlineCode",{parentName:"li"},"downloads"),", but sorted by the number of followers of this mod."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"newest")," => Sorts by the newest mod created. This is based on the time of initial creation of the mod."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"updated")," => Sorts by the newest mod updated. This is based on the time of the latest update of the mod (creation of a new version).")),(0,i.kt)("h3",{id:"limit"},"Limit"),(0,i.kt)("p",null,"The maximum number of matches that will be returned in the API call.\nIf it's higher than 100, it will return an error."),(0,i.kt)("h3",{id:"offset"},"Offset"),(0,i.kt)("p",null,"Offset is the number of matches that you skip from the beginning.\nThere's no limit, and if used with ",(0,i.kt)("inlineCode",{parentName:"p"},"limit"),", you are easily able to make paging in any customized way you want."),(0,i.kt)("h3",{id:"filters"},"Filters"),(0,i.kt)("p",null,"Filters are a more powerful version of Query for search.\nMore documentation on how to use this query parameters is underway."),(0,i.kt)("h3",{id:"facets"},"Facets"),(0,i.kt)("p",null,"Facets may be the most difficult thing to understand in search, but is necessary for the majority of searches."),(0,i.kt)("h4",{id:"facet-types"},"Facet types"),(0,i.kt)("p",null,"A facet can be of multiple types:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"categories")," => A loader or a general category. A way to get a list of all categories is available ",(0,i.kt)("a",{parentName:"li",href:"/docs/tutorials/statics"},"here")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"versions")," => A minecraft version. A way to get a list of all minecraft versions is available ",(0,i.kt)("a",{parentName:"li",href:"/docs/tutorials/statics"},"here")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"license")," => A licence for projects (LGPL, WTFPL...) A way to get a list of all licenses is available ",(0,i.kt)("a",{parentName:"li",href:"/docs/tutorials/statics"},"here")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"project_type")," => A project type, the only supported values currently are ",(0,i.kt)("inlineCode",{parentName:"li"},"modpack")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"mod"))),(0,i.kt)("p",null,"Now you have all the facets types, to get a string representing both the type and the content, you have to use the following:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"{type}:{value}\n")),(0,i.kt)("p",null,"Where type is one of the facet types defined above."),(0,i.kt)("h4",{id:"operators"},"Operators"),(0,i.kt)("p",null,"In search, the main operators are ",(0,i.kt)("inlineCode",{parentName:"p"},"AND")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"OR"),". The others are not supported as of now."),(0,i.kt)("p",null,"First of all, all facets search must be included in a javascript array."),(0,i.kt)("h5",{id:"or"},"OR"),(0,i.kt)("p",null,"All elements in a single array ",(0,i.kt)("strong",{parentName:"p"},"after the first one")," are considered in a single OR block.\nFor example, the search ",(0,i.kt)("inlineCode",{parentName:"p"},'[["versions:1.16.5", "versions:1.17.1"]]')," translates to ",(0,i.kt)("inlineCode",{parentName:"p"},"Projects that supports 1.16.5 OR 1.17.1")),(0,i.kt)("h5",{id:"and"},"AND"),(0,i.kt)("p",null,"All arrays in the top-level one are considered in a single AND block.\nFor example, the search ",(0,i.kt)("inlineCode",{parentName:"p"},'[["versions:1.16.5"], ["project_type:modpack"]]')," translates to ",(0,i.kt)("inlineCode",{parentName:"p"},"Projects that support 1.16.5 AND are modpacks")),(0,i.kt)("p",null,"If you want to learn more about facets, the documentation on them is available ",(0,i.kt)("a",{parentName:"p",href:"https://docs.meilisearch.com/reference/features/faceted_search.html#using-facets"},"here")))}h.isMDXComponent=!0}}]);